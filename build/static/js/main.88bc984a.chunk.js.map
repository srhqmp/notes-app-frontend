{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Notes","note","toggleImportance","className","content","onClick","value","id","important","baseUrl","axios","get","then","response","notes","data","sampleNote","date","Date","toISOString","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","e","target","noteToChange","find","toString","changedNote","updatedNote","map","catch","error","errMessage","setTimeout","filter","n","notesToShow","Note","onSubmit","preventDefault","Math","random","err","type","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88bc984a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Notes = ({ note, toggleImportance }) => {\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content}{\" \"}\r\n      <button onClick={toggleImportance} value={note.id}>\r\n        {note.important ? \"make not important\" : \"make important\"}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => {\r\n    const notes = response.data;\r\n    const sampleNote = {\r\n      content: \"this will cause error\",\r\n      id: 500,\r\n      date: new Date().toISOString(),\r\n      important: true,\r\n    };\r\n\r\n    return notes.concat(sampleNote);\r\n  });\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject).then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios\r\n    .put(`${baseUrl}/${id}`, newObject)\r\n    .then((response) => response.data);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, update };\r\n","const Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","const Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2021\r\n      </em>\r\n      <br />\r\n      @srhqmp\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((note) => setNotes(note));\n  }, []);\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const note = {\n      content: newNote,\n      important: Math.random() < 0.5,\n      date: new Date().toISOString(),\n    };\n    noteService\n      .create(note)\n      .then((note) => {\n        setNotes(notes.concat(note));\n        setNewNote(\"\");\n      })\n      .catch((err) => {\n        setErrorMessage(err.response.data.error);\n        setTimeout(() => setErrorMessage(null), 5000);\n      });\n  };\n\n  const handleNewNote = (e) => {\n    const value = e.target.value;\n    setNewNote(value);\n  };\n\n  const toggleImportance = (e) => {\n    const id = e.target.value;\n    const noteToChange = notes.find((note) => note.id.toString() === id);\n    const changedNote = { ...noteToChange, important: !noteToChange.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((updatedNote) => {\n        setNotes(\n          notes.map((note) => (note.id.toString() === id ? updatedNote : note))\n        );\n      })\n      .catch((error) => {\n        const errMessage = `note \"${noteToChange.content}\" was deleted from server`;\n        setErrorMessage(errMessage);\n        setTimeout(() => setErrorMessage(null), 5000);\n        setNotes(notes.filter((n) => n.id.toString() !== id));\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <button onClick={() => setShowAll(!showAll)}>\n        {showAll ? \"Show Important\" : \"Show All\"}\n      </button>\n      <ul>\n        {notesToShow.map((note) => {\n          return (\n            <Note\n              key={note.id}\n              note={note}\n              toggleImportance={toggleImportance}\n            />\n          );\n        })}\n      </ul>\n      <form onSubmit={addNote}>\n        <input type=\"text\" value={newNote} onChange={handleNewNote} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n// import axios from \"axios\";\n\n// axios\n//   .get(\"http://localhost:5000/notes\")\n//   .then((response) => console.log(response));\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}